generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["views", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  ADMIN
  STAFF
  STUDENT
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String   @unique
  dob            Int?
  phone_number   String?
  gender         String?
  role           Roles    @default(STUDENT)
  image          String?
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  sessions  Session[]
  RoomCheck RoomCheck[]
  Savings   Savings[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model RoomCheck {
  id                    String   @id @default(cuid())
  staff_id              String?
  student_id            String?
  staff_name            String?
  purpose               String?
  observation           String?
  thoughts_and_feelings String?
  maintenance_issues    String?
  user                  User?    @relation(fields: [staff_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model Savings {
  id             String   @id @default(cuid())
  staff_id       String?
  staff_name     String? //Staff name
  student_id     String?
  student_name   String?
  student_email  String?
  deposited_by   String? //Depositor name
  recieved_by    String? //Staff name
  deposit_amount Float?
  balance        Float?
  user           User?    @relation(fields: [staff_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
